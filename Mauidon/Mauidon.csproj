<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- iOS, Android, MacCatalyst -->
		<TargetFrameworks>net6.0-ios;net6.0-android;net6.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows')) and '$(MSBuildRuntimeType)' == 'Full'">$(TargetFrameworks);net6.0-windows10.0.19041</TargetFrameworks>
		<OutputType>Exe</OutputType>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<RootNamespace>Mauidon</RootNamespace>
		<EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
		
		<!-- Display name -->
		<ApplicationTitle>Mauidon</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.Mauidon</ApplicationId>

		<!-- Versions -->
		<ApplicationVersion>1.0</ApplicationVersion>
		<AndroidVersionCode>1</AndroidVersionCode>

		<!-- Required for C# Hot Reload -->
		<UseInterpreter Condition="'$(Configuration)' == 'Debug'">True</UseInterpreter>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiImage Include="Resources\appicon.svg" ForegroundFile="Resources\appiconfg.svg" IsAppIcon="true" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\appiconfg.svg" Color="#512BD4" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="Resources\Images\Logo.png" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="LiteDB" Version="5.0.11" />
	  <PackageReference Include="Mastonet" Version="1.8.2" />
	  <PackageReference Include="Microsoft.Extensions.FileProviders.Abstractions" Version="6.0.0-preview.6.21352.12" />
	  <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.354">
	    <PrivateAssets>all</PrivateAssets>
	    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
	  </PackageReference>
	  <PackageReference Include="Xamarin.Auth" Version="1.7.0" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Translations\Common.Designer.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>Common.resx</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Update="Translations\Common.resx">
	    <Generator>ResXFileCodeGenerator</Generator>
	    <LastGenOutput>Common.Designer.cs</LastGenOutput>
	  </EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="AuthorizationPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="LoginPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="MainTootPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Styles\DefaultTheme.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Styles\LightTheme.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Templates\DataTemplates.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="UserProfilePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\UserProfileHeaderView.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>


	<ItemGroup Condition="$(TargetFramework.Contains('-windows'))">
		<!-- Required - WinUI does not yet have buildTransitive for everything -->
		<PackageReference Include="Microsoft.ProjectReunion" Version="0.8.1" />
		<PackageReference Include="Microsoft.ProjectReunion.Foundation" Version="0.8.1" />
		<PackageReference Include="Microsoft.ProjectReunion.WinUI" Version="0.8.1" />
		<PackageReference Include="Microsoft.ProjectReunion.InteractiveExperiences" Version="0.8.1" NoWarn="NU1701" />
	</ItemGroup>

	<PropertyGroup>
		<!-- Required - WinUI can't deploy in a multi-targeting environment -->
		<AppxPackageRecipe>bin\$(Configuration)\net6.0-windows10.0.19041\win-x64\NewMauiTest.build.appxrecipe</AppxPackageRecipe>
		<RuntimeIdentifier Condition="$(TargetFramework.Contains('-windows'))">win-x64</RuntimeIdentifier>
	</PropertyGroup>

	<PropertyGroup>
		<InvariantGlobalization Condition="$(TargetFramework.Contains('-maccatalyst'))">true</InvariantGlobalization>
		<RuntimeIdentifier Condition="$(TargetFramework.Contains('-ios'))">iossimulator-x64</RuntimeIdentifier>
		<RuntimeIdentifier Condition="$(TargetFramework.Contains('-maccatalyst'))">maccatalyst-x64</RuntimeIdentifier>
	</PropertyGroup>

	<ItemGroup>
		<AdditionalFiles Include="stylecop.json" />
	</ItemGroup>
	
</Project>
